# Utilities Robot - All in one Utilities Bot of Telegram
# Copyright (C) 2022 Divide Projects <https://github.com/DivideProjects>

# This file is part of Utilities Robot.

# Utilities Robot is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Utilities Robot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with Utilities Robot.  If not, see <https://www.gnu.org/licenses/>.

from pyrogram.types import Message

from bots import MODULES, app
from bots.utils.joinCheck import joinCheck
from bots.utils.translator import translate

MODULES.update(
    {
        "translate": {
            "info": "To translate the text.",
            "usage": "/tr [optional: translate to language] [reply/text]",
        },
    },
)


@app.command("tr")
@joinCheck()
async def translate(_, message: Message):
    msg = await message.reply_text("....")
    if len(message.command) == 1:
        toLanguage = "en"
        if not message.reply_to_message:
            return await msg.edit_text(
                f"Usage: {MODULES.get('translate').get('usage')}",
            )
        text = message.reply_to_message.text.markdown

    if len(message.command) == 2:
        toLanguage = message.command[1]
        if not message.reply_to_message:
            return await msg.edit(f"Usage: {MODULES.get('translate').get('usage')}")
        text = message.reply_to_message.text.markdown

    if len(message.command) == 3:
        toLanguage = message.command[1]
        text = message.command[2]

    await msg.edit_text(translate(text, toLanguage))
